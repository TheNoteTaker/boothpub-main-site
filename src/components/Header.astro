---
import { Image } from 'astro:assets';
import { Icon } from '@/components/ui/Icon';

const navLinks = [
  { href: '#demo', label: 'Demo' },
  { href: '#features', label: 'Features' },
  { href: '#gallery', label: 'Gallery' },
  { href: '#contact', label: 'Contact' },
];
---

<header class="fixed top-0 left-0 right-0 z-50 bg-black/20 backdrop-blur-sm border-b border-white/5">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-20">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="text-white font-bold text-2xl hover:text-white/80 transition-all duration-300 ease-out">
          Booth Pub
        </a>
      </div>

      <!-- Navigation Links -->
      <nav class="hidden md:flex space-x-8">
        {navLinks.map(({ href, label }) => (
          <a 
            href={href}
            class="text-gray-300 hover:text-white relative after:absolute after:bottom-0 after:left-0 after:h-[2px] after:w-0 hover:after:w-full after:bg-white after:transition-all after:duration-300 transition-all duration-300"
          >
            {label}
          </a>
        ))}
      </nav>

      <!-- CTA Button -->
      <div class="hidden md:block">
        <a
          href="#book"
          class="inline-flex items-center px-6 py-2.5 border border-white/20 text-sm font-medium rounded-lg text-white bg-white/10 hover:bg-white hover:text-black transition-all duration-300 ease-out transform hover:scale-105 hover:shadow-lg"
        >
          Book Now
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="text-gray-300 hover:text-white transition-colors duration-300"
          aria-label="Open menu"
          id="menuButton"
        >
          <Icon name="Menu" className="h-6 w-6" client:load />
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu (hidden by default) -->
  <div class="hidden md:hidden transition-all duration-300 ease-in-out" id="mobileMenu">
    <div class="px-2 pt-2 pb-3 space-y-1 bg-black/60 backdrop-blur-lg">
      {navLinks.map(({ href, label }) => (
        <a
          href={href}
          class="block px-3 py-2 text-gray-300 hover:text-white hover:bg-white/10 rounded-lg transition-all duration-300"
        >
          {label}
        </a>
      ))}
      <a
        href="#book"
        class="block px-3 py-2 text-white bg-white/10 hover:bg-white hover:text-black rounded-lg transition-all duration-300 transform hover:translate-x-1"
      >
        Book Now
      </a>
    </div>
  </div>
</header>

<script>
  // Use TypeScript for better type safety
  const menuButton = document.getElementById('menuButton') as HTMLButtonElement | null;
  const mobileMenu = document.getElementById('mobileMenu') as HTMLDivElement | null;

  if (menuButton && mobileMenu) {
    const toggleMenu = () => {
      mobileMenu.classList.toggle('hidden');
      if (!mobileMenu.classList.contains('hidden')) {
        mobileMenu.classList.add('animate-slideDown');
      } else {
        mobileMenu.classList.remove('animate-slideDown');
      }
    };

    menuButton.addEventListener('click', toggleMenu);

    // Close menu when clicking outside
    document.addEventListener('click', (event) => {
      const target = event.target as HTMLElement;
      if (!menuButton.contains(target) && !mobileMenu.contains(target)) {
        mobileMenu.classList.add('hidden');
        mobileMenu.classList.remove('animate-slideDown');
      }
    });

    // Close menu when clicking a link
    mobileMenu.querySelectorAll('a').forEach((link) => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
        mobileMenu.classList.remove('animate-slideDown');
      });
    });
  }
</script>

<style>
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-slideDown {
    animation: slideDown 0.3s ease-out forwards;
  }
</style> 